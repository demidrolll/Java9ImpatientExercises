package org.demidrolll.java9impatient.ch9.task15;

import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;

/**
 * Continue the preceding exercise, but change the data representation of
 * Point so that it stores the coordinates in an array. What happens when
 * the new version tries to read a file generated by the old version? What
 * happens when you fix up the serialVersionUID? Suppose your life depended
 * upon making the new version compatible with the old. What could
 * you do?
 */
public class App {

    private static class Point implements Serializable {

        private static final long serialVersionUID = 2L;

        private double x;
        private double y;

        private final double[] coordinates = new double[2];

        public Point(double x, double y) {
            coordinates[0] = x;
            coordinates[1] = y;
        }

        @Override
        public String toString() {
            return "Point{" +
                    "x=" + coordinates[0] +
                    ", y=" + coordinates[1] +
                    '}';
        }
    }

    private static class ExtendReadObject extends ObjectInputStream {

        public ExtendReadObject(InputStream in) throws IOException {
            super();
        }

        @Override
        protected Object readObjectOverride() throws IOException, ClassNotFoundException {
            GetField fields = readFields();
            return null;
        }
    }

    public static void main(String[] args) {
        Point[] points = new Point[] { new Point(1, 1), new Point(2, 2), new Point(3, 3) };

        try (ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(Paths.get("points_2.dat")))) {
            out.writeObject(points);
        } catch (IOException e) {
            e.printStackTrace();
        }

        System.out.println(Arrays.toString(points));

        Point[] restoredPoints = null;
        try (ObjectInputStream in = new ExtendReadObject(Files.newInputStream(Paths.get("points.dat")))) {
            restoredPoints = (Point[]) in.readObject();
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }

        System.out.println(Arrays.toString(restoredPoints));
    }
}